; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
framework = stm32cube
extra_scripts = 
                pre:$PROJECT_DIR/StallardOS/scripts/countFunctions.py
                pre:$PROJECT_DIR/StallardOS/scripts/workaround.py 
                post:$PROJECT_DIR/StallardOS/scripts/segmentAlignTest/segmentAlignTest.py
                ;post:StallardOS/scripts/flash.py
upload_protocol = stlink
debug_tool = stlink
platform = ststm32
check_tool = cppcheck
monitor_speed = 115200
test_port = /dev/ttyUSB0

[env:f407vet6]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=25000000U" -DnotHaveCan -fsingle-precision-constant -I ECU_Defines -DSTM32F4xxxx -DSTM32F407xx -DSTM32F407VE
board = genericSTM32F407VET6
board_build.maximum_ram_size = 131072

[env:black_f407ve]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=8000000U" -DnotHaveCan -fsingle-precision-constant -I ECU_Defines -DSTM32F4xxxx -DSTM32F407xx -DSTM32F407VE 
board = black_f407ve
board_build.maximum_ram_size = 131072
; board_build.ldscript = StallardOS/ldscripts/STM32F407VETX_FLASH.ld
; do not reset board upon connecting
; debug_load_mode = manual
; debug_init_cmds =
;   target extended-remote $DEBUG_PORT
;   $INIT_BREAK
;   monitor halt
;   monitor init
;   monitor resume

[env:nucleo_f446ze]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=16000000U" -I ECU_Defines -DSTM32F4xxxx -DSTM32F446xx -DSTM32F446ZE 
board = nucleo_f446ze

[env:rcu_fcu]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=8000000U" -I ECU_Defines -DSTM32F4xxxx -DSTM32F417xx -DSTM32F417IG
board = genericSTM32F417VG
board_build.mcu = stm32f417ig
board_build.ldscript = $PROJECT_DIR/StallardOS/ldscripts/STM32F417IGHX_FLASH.ld

[env:bms]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=8000000U" -I ECU_Defines -DSTM32F4xxxx -DSTM32F446xx -DSTM32F446ZE
board = nucleo_f446ze
board_build.mcu = stm32f446zet7

[env:evalBoard]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=25000000U" -I ECU_Defines -DSTM32F4xxxx -DSTM32F417xx -DSTM32F417IG
board = genericSTM32F417VG
board_build.mcu = stm32f417ig
board_build.ldscript = $PROJECT_DIR/StallardOS/ldscripts/STM32F417IGHX_FLASH.ld

[env:mikroe]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=25000000U" -I ECU_Defines -DSTM32F4xxxx -DSTM32F417xx -DSTM32F417ZG
board = genericSTM32F417VG
board_build.mcu = stm32f417zg
;board_build.ldscript = $PROJECT_DIR/StallardOS/ldscripts/STM32F417ZGTX_FLASH.ld

[env:swcu]
build_flags = -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -D"HSE_VALUE=8000000U" -I ECU_Defines -DSTM32F4xxxx -DSTM32F415xx -DSTM32F415RG
board = genericSTM32F415RG
;board_build.ldscript = $PROJECT_DIR/StallardOS/ldscripts/STM32F415RGTX_FLASH.ld

[env:bluepill]
build_flags = -Wall -I ECU_Defines -DSTM32F1xxxx -DSTM32F103xx -DSTM32F103C8 -D"HSE_VALUE=8000000U"
board = bluepill_f103c8

[env:bluepill_clone]
build_flags = -Wall -I ECU_Defines -DSTM32F1xxxx -DSTM32F103xx -DSTM32F103C8 -D"HSE_VALUE=8000000U"
board = bluepill_f103c8
; change microcontroller
board_build.mcu = stm32f103c8t6
; change MCU frequency
board_build.f_cpu = 72000000L
upload_flags = -c set CPUTAPID 0x2ba01477
debug_server =
  /home/jannick/.platformio/packages/tool-openocd/bin/openocd
  -s /home/jannick/.platformio/packages/tool-openocd/scripts
  -f interface/stlink.cfg
  -c "transport select hla_swd"
  -c "set CPUTAPID 0x2ba01477"
  -f target/stm32f1x.cfg
  -c "reset_config none" 